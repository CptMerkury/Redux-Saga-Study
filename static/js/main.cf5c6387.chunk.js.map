{"version":3,"sources":["modules/api/endpoints.js","modules/api/actions.js","modules/api/selectors.js","hooks/useFetch.js","components/common/ProfileCard.js","components/common/ProfileGrid.js","modules/app/selectors.js","components/Employees/Employees.jsx","modules/app/actions.js","components/common/NavigationItem.js","components/common/Navigation.js","components/Jobs/Jobs.jsx","App.js","modules/api/reducer.js","modules/app/reducer.js","modules/api/api.js","modules/api/saga.js","store.js","index.js"],"names":["JOBS","EMPLOYEES","ENDPOINTS","uri","method","API_ACTIONS","apiActions","endpoint","payload","type","toUpperCase","selectApiState","state","api","useFetch","dispatch","useDispatch","apiState","useSelector","shallowEqual","performFetch","useCallback","data","response","useMemo","camelCase","useStyles","makeStyles","theme","root","display","padding","avatar","alignItems","justifyContent","ProfileCard","src","title","subSpecialties","classes","Card","className","Avatar","alt","CardContent","content","Typography","component","variant","color","length","flexWrap","item","breakpoints","up","flexBasis","down","ProfileGrid","profiles","loading","Grid","container","justify","CircularProgress","map","profile","name","job","id","selectAppState","store","app","Employees","appState","useEffect","preparedData","Array","isArray","selectedJob","filter","employee","APP_ACTIONS","NavigationItem","jobId","action","ListItem","button","onClick","selected","ListItemText","primary","drawerWidth","drawer","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","Navigation","services","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","List","AppBar","position","Toolbar","IconButton","aria-label","edge","noWrap","Hidden","smUp","implementation","Drawer","document","body","open","onClose","paper","ModalProps","keepMounted","xsDown","Jobs","flexGrow","App","INITIAL_STATE","Object","keys","reduce","acc","next","error","apiReducer","startsWith","inner","replace","state2actionMapping","appReducer","baseUrl","endpoints","this","a","fetch","generateRequest","json","onApiLoad","watchApiLoad","apiRootSaga","actionType","toLowerCase","put","takeEvery","all","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","apiSaga","ReactDOM","render","StrictMode","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.cf5c6387.chunk.js","sourcesContent":["export const JOBS = 'jobs';\nexport const EMPLOYEES = 'employees';\n\nconst ENDPOINTS = {\n    [JOBS]: {\n        uri: '/jobs',\n        method: 'GET'\n    },\n    [EMPLOYEES]: {\n        uri: '/employees',\n        method: 'GET'\n    }\n};\n\nexport default ENDPOINTS;","\nexport const API_ACTIONS = {\n    FETCH_START: 'FETCH_START_',\n    FETCH_SUCCESS: 'FETCH_SUCCESS_',\n    FETCH_FAILURE: 'FETCH_FAILURE_'\n};\n\nexport const apiActions = {\n    fetch: (endpoint, payload) => ({\n        type: `${API_ACTIONS.FETCH_START}${endpoint.toUpperCase()}`,\n        payload\n    }),\n    fetchSuccess: (endpoint, payload) => ({\n        type: `${API_ACTIONS.FETCH_SUCCESS}${endpoint.toUpperCase()}`,\n        payload\n    }),\n    fetchFailure: (endpoint, payload) => ({\n        type: `${API_ACTIONS.FETCH_FAILURE}${endpoint.toUpperCase()}`,\n        payload\n    })\n};","export const selectApiState = state => state.api;","import {useCallback, useMemo} from 'react';\nimport camelCase from 'camelcase';\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux';\nimport {apiActions} from 'modules/api/actions';\nimport {selectApiState} from 'modules/api/selectors';\n\nconst useFetch = endpoint => {\n    const dispatch = useDispatch();\n    const apiState = useSelector(selectApiState, shallowEqual);\n\n    const performFetch = useCallback(data => dispatch(apiActions.fetch(endpoint, data)), [endpoint, dispatch]);\n    const response = useMemo(() => apiState[camelCase(endpoint)], [apiState, endpoint]);\n\n    return {response, performFetch};\n}\n\nexport default useFetch;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        padding: '4px 24px'\n    },\n    avatar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n}));\n\nexport default function ProfileCard({ src, title, subSpecialties }) {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Card className={classes.root}>\n                <div className={classes.avatar}>\n                    <Avatar alt={title} src={src} />\n                </div>\n                <div>\n                    <CardContent className={classes.content}>\n                        <Typography component=\"h5\" variant=\"h5\">\n                            {title}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                            {(subSpecialties && subSpecialties.length > 0) ? subSpecialties : ' – '}\n                        </Typography>\n                    </CardContent>\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nProfileCard.propTypes = {\n    src: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    subSpecialties: PropTypes.string\n}","import React from 'react';\nimport ProfileCard from './ProfileCard';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    item: {\n        padding: '10px',\n        [theme.breakpoints.up('sm')]: {\n            flexBasis: '50%'\n        },\n        [theme.breakpoints.down('sm')]: {\n            flexBasis: '100%'\n        },\n        [theme.breakpoints.up('lg')]: {\n            flexBasis: '33.33%'\n        },\n    }\n}));\n\nexport default function ProfileGrid({profiles = [], loading}) {\n    const classes = useStyles();\n\n    if (loading || !profiles) {\n        return (\n            <Grid container justify='center'>\n                <CircularProgress />\n            </Grid>\n        )\n    }\n\n    return (\n        <div className={classes.root}>\n            {profiles\n                .map(profile => (\n                    <div key={profile.id} className={classes.item}>\n                        <ProfileCard\n                            src={profile.avatar}\n                            title={profile.name}\n                            subSpecialties={profile.job}\n                        />\n                    </div>\n                ))}\n        </div>\n    )\n}","export const selectAppState = store => store.app;","import React, {useEffect, useMemo} from 'react';\nimport { EMPLOYEES } from 'modules/api/endpoints';\nimport useFetch from 'hooks/useFetch';\nimport ProfileGrid from 'components/common/ProfileGrid';\nimport { useSelector } from 'react-redux';\nimport { selectAppState } from 'modules/app/selectors';\n\nexport default function Employees() {\n    const {response, performFetch} = useFetch(EMPLOYEES);\n    const {loading, data} = response;\n    const appState = useSelector(selectAppState);\n\n    useEffect(() => {\n        performFetch();\n    }, [performFetch]);\n\n    const preparedData = useMemo(() => {\n        if (!Array.isArray(data)) {\n            return [];\n        }\n\n        if (!appState.selectedJob) {\n            return data;\n        }\n\n        return data.filter(employee => employee.job === appState.selectedJob);\n    }, [data, appState.selectedJob]);\n\n    return <ProfileGrid profiles={preparedData} loading={loading} />\n}","export const APP_ACTIONS = {\n    APP_FILTER_EMPLOYEES: 'APP_FILTER_EMPLOYEES'\n}\n\nexport function filterEmployees(filterBy) {\n    return {\n        type: APP_ACTIONS.APP_FILTER_EMPLOYEES,\n        payload: filterBy\n    };\n}","import React, {useCallback} from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { filterEmployees } from 'modules/app/actions';\nimport {selectAppState} from 'modules/app/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function NavigationItem({ id, jobId, title}) {\n    const dispatch = useDispatch();\n    const appState = useSelector(selectAppState);\n    const action = useCallback(() => {\n        dispatch(filterEmployees(jobId))\n    }, [jobId, dispatch])\n\n    return (\n        <ListItem button onClick={action} selected={jobId === appState.selectedJob}>\n            <ListItemText primary={title} />\n        </ListItem>\n    );\n}","import React, { useCallback } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Hidden from '@material-ui/core/Hidden';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ServiceItem from './NavigationItem';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n}));\n\nexport default function Navigation({ loading, services, title = '' }) {\n    const classes = useStyles();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    const handleDrawerToggle = useCallback(() => {\n        setMobileOpen(!mobileOpen);\n    }, [mobileOpen]);\n\n    const drawer = (\n        <div>\n            <div className={classes.toolbar} />\n            <Divider />\n            <List>\n                {loading || !services ? (\n                    <Grid container justify='center'>\n                        <CircularProgress />\n                    </Grid>\n                ) : (\n                    services.map(({ id, jobId, title }) => (\n                        <ServiceItem key={id} jobId={jobId} title={title} />\n                    ))\n                )}\n            </List>\n            <Divider />\n        </div>\n    );\n\n    return (\n        <>\n            <AppBar position='fixed' className={classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        color='inherit'\n                        aria-label='open drawer'\n                        edge='start'\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <nav className={classes.drawer} aria-label='mailbox folders'>\n                <Hidden smUp implementation='css'>\n                    <Drawer\n                        container={() => document.body}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true,\n                        }}\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n                <Hidden xsDown implementation='css'>\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        variant='permanent'\n                        open\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </nav>\n        </>\n    );\n}","import React, {useEffect} from 'react';\nimport { JOBS } from 'modules/api/endpoints';\nimport Navigation from 'components/common/Navigation';\nimport useFetch from 'hooks/useFetch';\n\nexport default function Jobs() {\n    const {response, performFetch} = useFetch(JOBS);\n    const {loading, data} = response;\n\n    useEffect(() => {\n        performFetch();\n    }, [performFetch]);\n\n    return <Navigation loading={loading} services={data} title={'react + redux + redux-saga app'} />;\n}","\nimport React from 'react';\nimport Employees from 'components/Employees/Employees';\nimport Jobs from 'components/Jobs/Jobs';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Jobs />\n            <main className={classes.content}>\n                <div className={classes.toolbar}/>\n                <Employees />\n            </main>\n        </div>\n    );\n}\n\nexport default App;","import camelCase from 'camelcase';\nimport ENDPOINTS from 'modules/api/endpoints';\nimport { API_ACTIONS } from 'modules/api/actions';\n\nfunction initApiState() {\n    return Object.keys(ENDPOINTS).reduce((acc, next) => {\n        const inner = {\n            data: null,\n            loading: false,\n            error: null\n        };\n\n        acc[camelCase(next)] = inner;\n\n        return acc;\n    }, {});\n}\n\nconst INITIAL_STATE = initApiState();\n\nconst apiReducer = (state = INITIAL_STATE, action) => {\n    if (action.type.startsWith(API_ACTIONS.FETCH_START)) {\n        const inner = camelCase(action.type.replace(API_ACTIONS.FETCH_START, ''));\n\n        return {\n            ...state,\n            [inner]: {\n                ...state[inner],\n                loading: true,\n                error: null\n            }\n        };\n    }\n\n    if (action.type.startsWith(API_ACTIONS.FETCH_SUCCESS)) {\n        const inner = camelCase(action.type.replace(API_ACTIONS.FETCH_SUCCESS, ''));\n\n        return {\n            ...state,\n            [inner]: {\n                ...state[inner],\n                data: action.payload,\n                loading: false,\n                error: null\n            }\n        };\n    }\n\n    if (action.type.startsWith(API_ACTIONS.FETCH_FAILURE)) {\n        const inner = camelCase(action.type.replace(API_ACTIONS.FETCH_FAILURE, ''));\n\n        return {\n            ...state,\n            [inner]: {\n                ...state[inner],\n                loading: false,\n                error: action.payload\n            }\n        };\n    }\n\n    return state;\n}\n\nexport default apiReducer;","import { APP_ACTIONS } from 'modules/app/actions';\n\nfunction getInitialState() {\n    return {\n        selectedJob: null\n    };\n}\n\nconst INITIAL_STATE = getInitialState();\n\nconst state2actionMapping = {\n    [APP_ACTIONS.APP_FILTER_EMPLOYEES]: (state, action) => {\n        return {\n            ...state,\n            selectedJob: action.payload\n        };\n    }\n}\n\nconst appReducer = (state = INITIAL_STATE, action) => {\n    return state2actionMapping[action.type] ? state2actionMapping[action.type](state, action) : state;\n}\n\nexport default appReducer;","\nimport ENDPOINTS from 'modules/api/endpoints';\n\nconst BASE_URL = 'https://5f7998dbe402340016f9321f.mockapi.io/api/v1';\n\nclass Api {\n    constructor(baseUrl, endpoints) {\n        this.baseUrl = baseUrl;\n        this.endpoints = endpoints;\n    }\n\n    async generateRequest(endpoint, data) {\n        const {method, uri} = this.endpoints[endpoint];\n\n        return fetch(`${this.baseUrl}${uri}`, {method, body: data});\n    }\n\n    async fetch(endpoint, data) {\n        const response = await this.generateRequest(endpoint, data);\n\n        return response.json();\n    }\n}\n\nexport default new Api(BASE_URL, ENDPOINTS)","import {takeEvery, put, all} from 'redux-saga/effects';\nimport api from 'modules/api/api';\nimport {apiActions, API_ACTIONS} from 'modules/api/actions';\n\nexport function* onApiLoad({payload, type}) {\n    const actionType = type.replace(API_ACTIONS.FETCH_START, '').toLowerCase();\n\n    try {\n        const response = yield api.fetch(actionType, payload);\n\n        yield put(apiActions.fetchSuccess(actionType, response));\n    } catch(e) {\n        yield put(apiActions.fetchFailure(actionType, e));\n    }\n}\n\nexport function* watchApiLoad() {\n    yield takeEvery(action => action.type.startsWith(API_ACTIONS.FETCH_START), onApiLoad);\n}\n\nexport default function* apiRootSaga() {\n    yield all([\n        watchApiLoad()\n    ]);\n}","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport apiReducer from 'modules/api/reducer';\nimport appReducer from 'modules/app/reducer';\nimport apiSaga from 'modules/api/saga';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : compose;\n\nconst reducers = combineReducers({\n    api: apiReducer,\n    app: appReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(apiSaga);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {Provider} from 'react-redux';\nimport App from 'App';\nimport store from 'store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <CssBaseline />\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}